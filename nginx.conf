
server {
    listen 80;

    client_max_body_size 500M;
    
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
    
    location /api {
        proxy_pass http://backend:5001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Augmenter les timeouts et les tailles de buffer
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
        send_timeout 600s;
        fastcgi_read_timeout 600s;
        client_body_timeout 600s;
        
        
        # Désactiver la mise en cache pour les requêtes API
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Gestion des erreurs
        proxy_intercept_errors on;
        error_page 413 /custom_413.html;
    }
    
    # Page d'erreur personnalisée pour les requêtes trop volumineuses
    error_page 413 /custom_413.html;
    location = /custom_413.html {
        internal;
        root /usr/share/nginx/html/errors;

        # En-têtes CORS pour les erreurs
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
}